spring:
  application:
    name: notification-service
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:26257/notification}
    driver-class-name: org.postgresql.Driver
    username: ${DATABASE_USERNAME:notification}
    password: ${DATABASE_PASSWORD:notificationDbPass}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.CockroachDB201Dialect
    show-sql: false
    hibernate:
      ddl-auto: none
  flyway:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:26257/notification}
    user: ${DATABASE_USERNAME:notification}
    password: ${DATABASE_PASSWORD:notificationDbPass}
    locations:
      - classpath:database/migrations
---
debug: false

server:
  port: 9000
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: ON_PARAM
    include-exception: false
---
slack:
  webhook:
    default:
      url: https://hooks.slack.com/services/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
---
# Test token for test version of the notification service slack bot
#
# We have one "Slack app" for production, with its own secret token in
# production secrets.
#
# We have another Slack app for non-production, the token of this commit
# is for this non-production app.
#
# This is because:
# - each app can only have one token (from the slack web interface)
# - we never want to have production token anywhere that is not production
#
# We got this token:
#
# - "Your Apps" on Slack web site: https://api.slack.com/apps
# - Click "Create New App"
# - Go into the new app details/settings page
# - Click "OAuth & Permissions"
# - Add OAuth scopes: channels:read, chat:write, incoming-webhook
# - Click "Install app in workspace"
# - Select a channel that is specific for *test* notifications
# - Copy the OAuth token
#
# That's it!
secrets:
  slack.app.oAuth.TOKEN: ${SLACK_OAUTH_TOKEN:xoxb-884992451442-4415381784435-RtOeEyy2u6aLIZt5ixRTWVgc}
  sendgrid.api.key: sendGridKey
---
schedule:
  cron:
    daytime: "0 0 9 * * *"
---
logging:
  level:
    org:
      springframework: INFO
      hibernate.SQL: INFO
      hibernate.type: INFO
    com:
      payaut: ${LOGGING_CONFIG_PAYAUT_LEVEL:DEBUG}
  config: ${LOGGING_CONFIG_FILE:classpath:log4j2.xml}